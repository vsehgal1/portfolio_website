{"version":3,"sources":["components/myAvatar.png","components/home.js","components/project.js","components/experience.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","style","width","margin","className","col","src","logo","alt","fontSize","href","target","rel","class","aria-hidden","React","Component","Project","Experience","Resume","Main","props","state","activeTab","this","onChange","tabId","setState","ripple","toggleCategories","App","scroll","color","fontWeight","opacity","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,4NCItBC,E,uKAEb,OACI,yBACAC,MAAO,CAACC,MAAM,OAAQC,OAAQ,SAC1B,kBAAC,OAAD,CAAMC,UAAU,YACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,yBACAC,IAAKC,IACLC,IAAI,SACJJ,UAAU,gBACV,yBAAKA,UAAU,YACX,kDACA,6BACA,yBAAKA,UAAU,YACf,uBACAH,MAAO,CAACQ,SAAS,SADjB,0DAGA,yFAEA,yBAAKL,UAAU,eAEX,uBACAM,KAAK,uDACLC,OAAO,SACPC,IAAI,uBACA,uBAAGC,MAAM,wBAAwBC,cAAY,UAGjD,uBACAJ,KAAK,+BACLC,OAAO,SACPC,IAAI,uBACA,uBAAGC,MAAM,sBAAsBC,cAAY,UAG/C,uBAAGJ,KAAO,mCACVC,OAAO,SACPC,IAAI,uBACA,uBAAGC,MAAM,iBAAiBC,cAAY,mB,GAvCxCC,IAAMC,WCFnBC,E,uKAEb,OACI,uD,GAHyBF,IAAMC,WCAtBE,E,uKAEb,OACI,mD,GAH4BH,IAAMC,WCAzBG,E,uKAEb,OACI,+C,GAHwBJ,IAAMC,WCKrBI,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,GAHA,E,+DAOf,OAA6B,IAAzBC,KAAKF,MAAMC,UAEP,kBAAC,EAAD,MAG0B,IAAzBC,KAAKF,MAAMC,UAEZ,kBAAC,EAAD,MAG0B,IAAzBC,KAAKF,MAAMC,UAEZ,kBAAC,EAAD,MAKA,kBAAC,EAAD,Q,+BAKF,IAAD,OACL,OACI,6BACI,yBAAKnB,UAAU,gBACX,kBAAC,OAAD,CACImB,UAAWC,KAAKF,MAAMC,UACtBE,SAAU,SAACC,GAAD,OAAW,EAAKC,SAAS,CAAEJ,UAAWG,KAChDE,QAAM,GACN,kBAAC,MAAD,aACA,kBAAC,MAAD,mBACA,kBAAC,MAAD,iBACA,kBAAC,MAAD,iBAGR,6BAASxB,UAAU,YACdoB,KAAKK,yB,GA7CQd,IAAMC,WCczBc,MAjBf,WACE,OACE,yBAAK1B,UAAU,oBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CAAQA,UAAU,cAAe2B,QAAM,EACvC9B,MAAO,CAAC+B,MAAM,UAAWvB,SAAU,OAAQwB,WAAY,OAAQC,QAAQ,OADvE,iBAIA,kBAAC,UAAD,KACE,yBAAK9B,UAAU,iBACf,kBAAC,EAAD,UCFU+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f1365f8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myAvatar.ccba7ce9.png\";","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport logo from './myAvatar.png'\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div\n            style={{width:'100%', margin: 'auto'}}>\n                <Grid className='homeGrid'>\n                    <Cell col={12}>\n                        <img \n                        src={logo} \n                        alt='avatar'\n                        className='avatarImage'></img>\n                        <div className='homeText'>\n                            <h1>Software Developer</h1>\n                            <hr/>\n                            <div className='paraText'>\n                            <p\n                            style={{fontSize:'30px'}}>\n                                Computer Science - University of Maryland College Park</p>\n                            <p>Python | Java | JavaScript | ReactJS | NodeJS | HTML/CSS </p>\n                            </div>\n                            <div className='socialMedia'>\n                                {/* LinkedIn*/}\n                                <a \n                                href='https://www.linkedin.com/in/vikram-sehgal-31144214b/'\n                                target='_blank'\n                                rel=\"noopener noreferrer\">\n                                    <i class=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i>\n                                </a>\n                                {/*GitHub*/}\n                                <a \n                                href='https://github.com/vsehgal1/'\n                                target='_blank'\n                                rel=\"noopener noreferrer\">\n                                    <i class=\"fa fa-github-square\" aria-hidden=\"true\"></i>\n                                </a>\n                                {/*Email*/}\n                                <a href = \"mailto: vikramsehgal99@gmail.com\"\n                                target='_blank'\n                                rel=\"noopener noreferrer\">\n                                    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                                </a>\n                            </div>\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Project extends React.Component {\n    render() {\n        return (\n            <div>this is my Project</div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Experience extends React.Component{\n    render(){\n        return(\n            <h1>experience Page</h1>\n        )\n    }\n}","import React from 'react';\n\nexport default class Resume extends React.Component{\n    render(){\n        return(\n            <h1>Resume Page</h1>\n        )\n    }\n}","import React from 'react';\nimport { Tabs, Tab } from 'react-mdl';\nimport Home from './home'\nimport Project from './project';\nimport Experience from './experience';\nimport Resume from './resume';\n\nexport default class Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: 0\n        }\n    }\n    toggleCategories() {\n        if (this.state.activeTab === 0) {\n            return (\n                <Home></Home>\n            )\n        }\n        else if (this.state.activeTab === 1) {\n            return (\n                <Experience></Experience>\n            )\n        }\n        else if (this.state.activeTab === 2) {\n            return (\n                <Project></Project>\n            )\n        }\n        else{\n            return(\n                <Resume></Resume>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='categoryTabs'>\n                    <Tabs\n                        activeTab={this.state.activeTab}\n                        onChange={(tabId) => this.setState({ activeTab: tabId })}\n                        ripple>\n                        <Tab >Home</Tab>\n                        <Tab>Experience</Tab>\n                        <Tab>Projects</Tab>\n                        <Tab>Resume</Tab>\n                    </Tabs>\n                </div>\n                <section className='homeGrid'>\n                    {this.toggleCategories()}\n                </section>\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Content } from 'react-mdl'\nimport Main from './components/main';\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n      <Layout>\n        <Header className='headerColor'  scroll\n        style={{color:'#947240', fontSize: '40px', fontWeight: 'bold', opacity:'.7'}}>\n          Vikram Sehgal\n        </Header>\n        <Content>\n          <div className=\"page-content\" />\n          <Main />\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}